.form {
  &__group:not(:last-child) {
    margin-bottom: 2rem;

    // &:not(:last-child) {
    //     margin-bottom: 2rem;
    //   }
  }

  &__input {
    font-size: 1.5rem;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba($color-white, 0.5);
    border: none;
    font-family: inherit;
    //for the border on focus so it will have them at both states causing it to stay in 1 place
    //and not move of the 3px of border on __input::focus
    border-bottom: 3px solid transparent;
    width: 90%;
    display: block;
    color: inherit;
    //section 3
    transition: all 0.3s;

    &:focus {
      outline: none;
      //for accessibility
      box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
      border-bottom: 3px solid $color-primary;
    }
    //when we have an invalid focused input
    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }

    //for the input placeholder which exists on the page
    &::-webkit-input-placeholder {
      //works only on safari and chrome
      color: $color-grey-dark-2;
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;
    display: block;
    transition: all 0.4s;
  }
  // We want the placeholder to move down towards the label
  // Using the sibling selector
  // ( adjacent sibling in this case selector +
  // general sibling selector ~
  &__input:placeholder-shown + &__label {
    //
    opacity: 0;
    // bcz the opacity only will keep the element on the page will invisible
    // but we need the opacity for animation bcz visiblity wont be enough
    visibility: hidden;
    //initial state
    transform: translateY(-4rem);
  }

  &__radio-group {
    width: 49%;
    //placing the two groups side by side and preventing line break with inline-block
    display: inline-block;
  }

  &__radio-input {
    display: none;
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 5rem;
  }

  &__radio-button {
    //drawing the outer green circle and positionning it
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    left: 0;
    top: -0.4rem;

    // Inner green circle
    &::after {
      content: '';
      display: block;
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      background-color: $color-primary;
      // Positionning in the center of the out circle
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      opacity: 0;
      //for the animation transition
      transition: opacity 0.2s;
    }
  }

  //   <input type="radio" class="form__radio-input" id="large" name="size" />
  // <label for="large" class="form__radio-label">
  //   <span class="form__radio-button"></span>
  //   Large tour group
  //   </label>

  //we want to affter the pseudo element after of the radio button when the radio input is check ( all radios have the prop )
  //  select radio-input when checked and get sibling which is __radio-label and get it's child __radio-button

  &__radio-input:checked ~ &__radio-label &__radio-button::after {
    opacity: 1;
  }
}
